import { Component,OnInit } from '@angular/core';
import { Router } from '@angular/router';
import { Title } from '@angular/platform-browser';
import { CustomerService } from "../shared/services/customer.service";


//import { EmailService } from '../../services/email.service';
//import { Email } from "../../models/email";
//import { Phone } from "../../models/phone";
declare let customerLinksObject: any;

@Component( {
    moduleId: module.id,
    selector: 'atlas-customeractions',
    templateUrl: 'customeractions.component.html',
    styleUrls: ['customeractions.component.css']
} )

export class CustomerActionsComponent implements OnInit {
    cifobj: string;
    linkclicked: boolean = false;
    //@Input()  name;
    //@Output() onVoted = new EventEmitter<any>();   
      customeractionlinks: any;
      customeractionlinksbuttongroupwebmigrated: any;
      customeractionlinksactions: any;
      customeractionlinksprofile: any;
      customeractionlinkscommunication: any;
      customeractionlinksOnBoarding: any;
      customeractionlinksactionsactiongroup: any;
      customeractionlinksprofileactiongroup: any;
      customeractionlinkscommunicationactiongroup: any
      customeractionlinksOnBoardingactiongroup: any;
      customeractionlinksreq: any={"buttongroupname": "Customer Actions","buttongrouplob": "ALL"};
    constructor(
        private router: Router,
        private customerService: CustomerService,
        private titleService: Title
    ) {

        titleService.setTitle( 'ATLAS - Customer Actions' );
    }
    ngOnInit() {
            this.loadCustomerLinks(this.customeractionlinksreq);     
    }
    loadCustomerLinks(customeractionlinksreq: any){
        this.customerService.retrieveCustomerLinks(customeractionlinksreq)
            .subscribe(
                    customeractionlinks => {
                    this.customeractionlinks = customeractionlinks;
                    this.customeractionlinksbuttongroupwebmigrated = this.customeractionlinks.buttongroupwebmigrated;
                    if(this.customeractionlinks.buttongroupwebmigrated == true){
                        this.customeractionlinksactions = customeractionlinks.buttonGroupMap.Actions;
                        this.customeractionlinksactionsactiongroup = this.customeractionlinksactions[0].actiongroup;
                        this.customeractionlinksprofile = customeractionlinks.buttonGroupMap.Profile;
                        this.customeractionlinksprofileactiongroup = this.customeractionlinksprofile[0].actiongroup;
                        this.customeractionlinkscommunication = customeractionlinks.buttonGroupMap.Communication;
                        this.customeractionlinkscommunicationactiongroup = this.customeractionlinkscommunication[0].actiongroup;
                        this.customeractionlinksOnBoarding = customeractionlinks.buttonGroupMap.Onboarding;
                        this.customeractionlinksOnBoardingactiongroup = this.customeractionlinksOnBoarding[0].actiongroup;
                    }
                    else if(this.customeractionlinksbuttongroupwebmigrated == false){
                          //window.close();
                          customerLinksObject.invokeCustomerActions(this.customeractionlinks.buttongroupname,this.customeractionlinks.buttongroupclassname);
                    }
                    },
                    error => {
                        console.log(error);
                        //this.loading = false;
                    });
    }
    updateModelAndForward( forwardUrl: any ) {
        
        //this.cifobj=JSON.stringify({});
       this.cifobj = ( <HTMLInputElement>document.getElementById( 'cif' ) ).value;
        this.cifobj = this.cifobj.replace( /'/g, "" );

        this.customerService.setCustomer(JSON.parse(this.cifobj));
        
        //this.router.navigate( [forwardUrl] );
    }

    /*
    updateModelAndLoadChild(comp: string) {
        this.cifobj = ( <HTMLInputElement>document.getElementById( 'cif' ) ).value;
        this.cifobj = this.cifobj.replace( /'/g, "" );

        this.linkclicked = true;
    }
    */
    customerActionLinks(linkname:string,linkclassname:string) {
    customerLinksObject.invokeCustomerActions(linkname,linkclassname);
  }
    
}