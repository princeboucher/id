import { Component,OnInit } from '@angular/core';
import { Router } from '@angular/router';
import { Title } from '@angular/platform-browser';
import { CustomerService } from "../shared/services/customer.service";
declare let customerLinksObject: any;


@Component( {
    moduleId: module.id,
    selector: 'atlas-planactions',
    templateUrl: 'planactions.component.html',
    styleUrls: ['planactions.component.css']
} )

export class PlanActionsComponent implements OnInit {
  planactionlinkscommunicationactiongroup: any;
  planactionlinkscommunication: any;
  planactionlinksbuttongroupwebmigrated: any;
  planactionlinksreq: any = {"buttongroupname": "Plan Actions", "buttongrouplob": "DEP"};
       planactionlinks: any;
       planVO: string;
        constructor( private router: Router, private customerService: CustomerService, private titleService: Title ) {

        titleService.setTitle( 'ATLAS - Customer Actions' );
    }
    
    ngOnInit() {
            this.loadPlanLinks(this.planactionlinksreq);     
    }
    
    loadPlanLinks(planactionlinksreq: any){
        this.customerService.retrieveCustomerLinks(planactionlinksreq)
            .subscribe(
                    planactionlinks => {
                    this.planactionlinks = planactionlinks;
                    console.log('planactionlinks'+JSON.stringify(this.planactionlinks));
                    this.planactionlinksbuttongroupwebmigrated = this.planactionlinks.buttongroupwebmigrated;
                    if(this.planactionlinks.buttongroupwebmigrated == true){
                        this.planactionlinkscommunication = planactionlinks.buttonGroupMap.Communication;
                        this.planactionlinkscommunicationactiongroup = this.planactionlinkscommunication[0].actiongroup;
                        
                        /*this.customeractionlinksprofile = customeractionlinks.buttonGroupMap.Profile;
                        this.customeractionlinksprofileactiongroup = this.customeractionlinksprofile[0].actiongroup;
                        this.customeractionlinkscommunication = customeractionlinks.buttonGroupMap.Communication;
                        this.customeractionlinkscommunicationactiongroup = this.customeractionlinkscommunication[0].actiongroup;
                        this.customeractionlinksOnBoarding = customeractionlinks.buttonGroupMap.Onboarding;
                        this.customeractionlinksOnBoardingactiongroup = this.customeractionlinksOnBoarding[0].actiongroup;*/
                    }
                    else if(this.planactionlinksbuttongroupwebmigrated == false){
                          //window.close();
                          customerLinksObject.invokeCustomerActions(this.planactionlinks.buttongroupname,this.planactionlinks.buttongroupclassname);
                    }
                    },
                    error => {
                        console.log(error);
                        //this.loading = false;
                    });
    }
    
    updateModelAndForward( forwardUrl: any ) {
       this.planVO = ( <HTMLInputElement>document.getElementById( 'planDetailsVO' ) ).value;
        this.planVO = this.planVO.replace( /'/g, "" );

        this.customerService.setCustomer(JSON.parse(this.planVO));
        
    }
     planActionLinks(linkname:string,linkclassname:string) {
    		customerLinksObject.invokeCustomerActions(linkname,linkclassname);
  	}
    
}